/*
cardano-node-api

Cardano Node API

API version: 1.0
Contact: support@blinklabs.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiResponseLocalStateQuerySystemStart type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiResponseLocalStateQuerySystemStart{}

// ApiResponseLocalStateQuerySystemStart struct for ApiResponseLocalStateQuerySystemStart
type ApiResponseLocalStateQuerySystemStart struct {
	Day         *int32 `json:"day,omitempty"`
	Picoseconds *int32 `json:"picoseconds,omitempty"`
	Year        *int32 `json:"year,omitempty"`
}

// NewApiResponseLocalStateQuerySystemStart instantiates a new ApiResponseLocalStateQuerySystemStart object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiResponseLocalStateQuerySystemStart() *ApiResponseLocalStateQuerySystemStart {
	this := ApiResponseLocalStateQuerySystemStart{}
	return &this
}

// NewApiResponseLocalStateQuerySystemStartWithDefaults instantiates a new ApiResponseLocalStateQuerySystemStart object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiResponseLocalStateQuerySystemStartWithDefaults() *ApiResponseLocalStateQuerySystemStart {
	this := ApiResponseLocalStateQuerySystemStart{}
	return &this
}

// GetDay returns the Day field value if set, zero value otherwise.
func (o *ApiResponseLocalStateQuerySystemStart) GetDay() int32 {
	if o == nil || IsNil(o.Day) {
		var ret int32
		return ret
	}
	return *o.Day
}

// GetDayOk returns a tuple with the Day field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiResponseLocalStateQuerySystemStart) GetDayOk() (*int32, bool) {
	if o == nil || IsNil(o.Day) {
		return nil, false
	}
	return o.Day, true
}

// HasDay returns a boolean if a field has been set.
func (o *ApiResponseLocalStateQuerySystemStart) HasDay() bool {
	if o != nil && !IsNil(o.Day) {
		return true
	}

	return false
}

// SetDay gets a reference to the given int32 and assigns it to the Day field.
func (o *ApiResponseLocalStateQuerySystemStart) SetDay(v int32) {
	o.Day = &v
}

// GetPicoseconds returns the Picoseconds field value if set, zero value otherwise.
func (o *ApiResponseLocalStateQuerySystemStart) GetPicoseconds() int32 {
	if o == nil || IsNil(o.Picoseconds) {
		var ret int32
		return ret
	}
	return *o.Picoseconds
}

// GetPicosecondsOk returns a tuple with the Picoseconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiResponseLocalStateQuerySystemStart) GetPicosecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.Picoseconds) {
		return nil, false
	}
	return o.Picoseconds, true
}

// HasPicoseconds returns a boolean if a field has been set.
func (o *ApiResponseLocalStateQuerySystemStart) HasPicoseconds() bool {
	if o != nil && !IsNil(o.Picoseconds) {
		return true
	}

	return false
}

// SetPicoseconds gets a reference to the given int32 and assigns it to the Picoseconds field.
func (o *ApiResponseLocalStateQuerySystemStart) SetPicoseconds(v int32) {
	o.Picoseconds = &v
}

// GetYear returns the Year field value if set, zero value otherwise.
func (o *ApiResponseLocalStateQuerySystemStart) GetYear() int32 {
	if o == nil || IsNil(o.Year) {
		var ret int32
		return ret
	}
	return *o.Year
}

// GetYearOk returns a tuple with the Year field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiResponseLocalStateQuerySystemStart) GetYearOk() (*int32, bool) {
	if o == nil || IsNil(o.Year) {
		return nil, false
	}
	return o.Year, true
}

// HasYear returns a boolean if a field has been set.
func (o *ApiResponseLocalStateQuerySystemStart) HasYear() bool {
	if o != nil && !IsNil(o.Year) {
		return true
	}

	return false
}

// SetYear gets a reference to the given int32 and assigns it to the Year field.
func (o *ApiResponseLocalStateQuerySystemStart) SetYear(v int32) {
	o.Year = &v
}

func (o ApiResponseLocalStateQuerySystemStart) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiResponseLocalStateQuerySystemStart) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Day) {
		toSerialize["day"] = o.Day
	}
	if !IsNil(o.Picoseconds) {
		toSerialize["picoseconds"] = o.Picoseconds
	}
	if !IsNil(o.Year) {
		toSerialize["year"] = o.Year
	}
	return toSerialize, nil
}

type NullableApiResponseLocalStateQuerySystemStart struct {
	value *ApiResponseLocalStateQuerySystemStart
	isSet bool
}

func (v NullableApiResponseLocalStateQuerySystemStart) Get() *ApiResponseLocalStateQuerySystemStart {
	return v.value
}

func (v *NullableApiResponseLocalStateQuerySystemStart) Set(
	val *ApiResponseLocalStateQuerySystemStart,
) {
	v.value = val
	v.isSet = true
}

func (v NullableApiResponseLocalStateQuerySystemStart) IsSet() bool {
	return v.isSet
}

func (v *NullableApiResponseLocalStateQuerySystemStart) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiResponseLocalStateQuerySystemStart(
	val *ApiResponseLocalStateQuerySystemStart,
) *NullableApiResponseLocalStateQuerySystemStart {
	return &NullableApiResponseLocalStateQuerySystemStart{
		value: val,
		isSet: true,
	}
}

func (v NullableApiResponseLocalStateQuerySystemStart) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiResponseLocalStateQuerySystemStart) UnmarshalJSON(
	src []byte,
) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
